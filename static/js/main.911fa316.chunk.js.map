{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/covid_image.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","ClassName","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.911fa316.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__16tSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2iSfO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__lWBCB\",\"infected\":\"Cards_infected__226NA\",\"recovered\":\"Cards_recovered__1iewS\",\"deaths\":\"Cards_deaths__2Gj6d\",\"card\":\"Cards_card__3Wk2M\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup' ;\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ( { data: {confirmed, recovered, deaths, lastUpdate } }) => {\r\n    console.log(confirmed)\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color =\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of active cases of Covid-19</Typography> \r\n                </CardContent>\r\n            </Grid>\r\n\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color =\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography> \r\n                </CardContent>\r\n            </Grid>\r\n\r\n\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color =\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of deaths caused by Covid-19</Typography> \r\n                </CardContent>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios' ;\r\n\r\nconst url= 'https://covid19.mathdro.id/api' ;\r\n\r\nexport const fetchData = async(country)=> {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get( changeableUrl);\r\n \r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch(error) {\r\n\r\n        console.log(error);\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() => {\r\n    try {\r\n       const { data } = await axios.get(`${url}/daily`);\r\n       \r\n       const modifiedData = data.map((dailyData) => ({\r\n           confirmed: dailyData.confirmed.total,\r\n           deaths: dailyData.deaths.total,\r\n           date: dailyData.reportDate,\r\n\r\n       }));\r\n\r\n       return modifiedData;\r\n\r\n    }catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const { data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name); \r\n\r\n    }catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect }  from 'react' ;\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data:{confirmed, deaths, recovered}, country}) => {\r\n    const [dailyData, setDailyData]= useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n\r\n        }\r\n\r\n      \r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n        <Line \r\n        data={{\r\n            labels: dailyData.map(({ date}) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n            }, {\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,\r\n\r\n            }],\r\n\r\n        } }\r\n\r\n        />) : null\r\n\r\n    );\r\n\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n            data={{\r\n                labels: ['Infected','Recovered','Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)','rgba(255, 0, 0, 0.5)'],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n\r\n            }}\r\n            options ={{\r\n                legend: {display:false},\r\n                title: { display: true, text: `Current state in ${country}`},\r\n            }}\r\n\r\n            />\r\n\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n       \r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect } from 'react' ;\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\nconst [fetchedCountries, setFetchedCountries]=useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n         setFetchedCountries(await fetchCountries());\r\n\r\n\r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    }, [setFetchedCountries] );\r\n\r\n   \r\n    return (\r\n        <FormControl ClassName={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) =>handleCountryChange(e.target.value)}>\r\n                <option value = \"\"> Global</option>\r\n                {fetchedCountries.map((country, i) => <option key= {i} value ={country}>{country}</option> )}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/covid_image.9e5d4fc7.png\";","import React from 'react' ;\r\n\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport styles from './App.module.css';\r\nimport { fetchData} from'./api' ;\r\n\r\nimport coronaImage from './images/covid_image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n   async componentDidMount( ) {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData });\r\n        \r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n       const fetchedData = await fetchData(country);\r\n\r\n       this.setState({data: fetchedData, country: country});\r\n\r\n    }\r\n\r\n    render( ) {\r\n        const { data, country } = this.state;\r\n\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image}src ={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react' ;\r\nimport ReactDOM from 'react-dom' ;\r\nimport App from './App' ;\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__17FjK\",\"image\":\"App_image__1jYk_\"};"],"sourceRoot":""}